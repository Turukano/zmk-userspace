#include <behaviors.dtsi>
#include "keymap_german.h"
#include "functions.dtsi"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
//#include "../zmk-nodefree-config/keypos_def/keypos_48keys.h"
//#include "../zmk-nodefree-config/international_chars/german.dtsi"

#define ___ &trans
#define XXX &none

#define DEF         0
#define SHIF        1
#define NAV         2
#define NUM         3
#define STRG        4

#include "combos.dtsi" //muss nach den layerdefs sein

/ {
    behaviors {
        u_ú: u_or_longu {
            compatible = "zmk,behavior-hold-tap";
            label = "u_ú";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&ú>;
        };
    };

/ {
    macros {
        ú: long_u {
            label = "long_u";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DE_ACUT &kp u>
                ;
        };
    };
};

ZMK_LAYER(default_layer,
 &kp J &kp D &u_ú ___ ___ ___ ___ ___ ___ ___ ___ ___
 ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
)

ZMK_LAYER(shifted_layer,
 ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
    ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
)

ZMK_LAYER(nav_layer,
 ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
    ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
    )

ZMK_LAYER(num_layer,
 ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
    ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
    )

ZMK_LAYER(strg_layer,
 ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
    ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___)